// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace day4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250312101135_6migration")]
    partial class _6migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("day4.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreatedDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            CustomerId = 2,
                            CreatedDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@example.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            CustomerId = 3,
                            CreatedDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@example.com",
                            Name = "Alice Brown"
                        },
                        new
                        {
                            CustomerId = 4,
                            CreatedDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@example.com",
                            Name = "Bob White"
                        },
                        new
                        {
                            CustomerId = 5,
                            CreatedDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie@example.com",
                            Name = "Charlie Green"
                        });
                });

            modelBuilder.Entity("day4.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 10, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 2, 15, 10, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            IsDeleted = true,
                            OrderDate = new DateTime(2024, 3, 20, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 4,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 4, 25, 9, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 5,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 30, 13, 50, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 6,
                            CustomerId = 1,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 6, 5, 11, 20, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 7,
                            CustomerId = 2,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 7, 10, 17, 10, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("day4.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderProductId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            OrderProductId = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 2,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = 3,
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 4,
                            OrderId = 2,
                            ProductId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = 5,
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 6,
                            OrderId = 3,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 7,
                            OrderId = 4,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = 8,
                            OrderId = 4,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 9,
                            OrderId = 5,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 10,
                            OrderId = 5,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = 11,
                            OrderId = 6,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 12,
                            OrderId = 6,
                            ProductId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 13,
                            OrderId = 7,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = 14,
                            OrderId = 7,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = 15,
                            OrderId = 7,
                            ProductId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("day4.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Laptop",
                            Price = 1000m,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Phone",
                            Price = 500m,
                            Stock = 20
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Tablet",
                            Price = 300m,
                            Stock = 15
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Monitor",
                            Price = 200m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Keyboard",
                            Price = 50m,
                            Stock = 25
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Mouse",
                            Price = 30m,
                            Stock = 30
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Headphones",
                            Price = 80m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("day4.Models.Order", b =>
                {
                    b.HasOne("day4.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("day4.Models.OrderProduct", b =>
                {
                    b.HasOne("day4.Models.Order", "Order")
                        .WithMany("orderProduct")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("day4.Models.Product", "Product")
                        .WithMany("orderProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("day4.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("day4.Models.Order", b =>
                {
                    b.Navigation("orderProduct");
                });

            modelBuilder.Entity("day4.Models.Product", b =>
                {
                    b.Navigation("orderProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
