// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace day5.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313101449_dataAdded1")]
    partial class dataAdded1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("day5.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Finance"
                        });
                });

            modelBuilder.Entity("day5.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DepartmentId = 1,
                            Email = "john@example.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DepartmentId = 2,
                            Email = "jane@example.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DepartmentId = 3,
                            Email = "alice@example.com",
                            Name = "Alice Brown"
                        },
                        new
                        {
                            EmployeeId = 4,
                            DepartmentId = 1,
                            Email = "bob@example.com",
                            Name = "Bob Johnson"
                        },
                        new
                        {
                            EmployeeId = 5,
                            DepartmentId = 2,
                            Email = "charlie@example.com",
                            Name = "Charlie White"
                        },
                        new
                        {
                            EmployeeId = 6,
                            DepartmentId = 3,
                            Email = "david@example.com",
                            Name = "David Black"
                        },
                        new
                        {
                            EmployeeId = 7,
                            DepartmentId = 1,
                            Email = "emma@example.com",
                            Name = "Emma Wilson"
                        },
                        new
                        {
                            EmployeeId = 8,
                            DepartmentId = 2,
                            Email = "frank@example.com",
                            Name = "Frank Adams"
                        },
                        new
                        {
                            EmployeeId = 9,
                            DepartmentId = 3,
                            Email = "grace@example.com",
                            Name = "Grace Harris"
                        },
                        new
                        {
                            EmployeeId = 10,
                            DepartmentId = 1,
                            Email = "hank@example.com",
                            Name = "Hank Miller"
                        },
                        new
                        {
                            EmployeeId = 11,
                            DepartmentId = 2,
                            Email = "ivy@example.com",
                            Name = "Ivy Clark"
                        },
                        new
                        {
                            EmployeeId = 12,
                            DepartmentId = 3,
                            Email = "jack@example.com",
                            Name = "Jack Lewis"
                        },
                        new
                        {
                            EmployeeId = 13,
                            DepartmentId = 1,
                            Email = "kate@example.com",
                            Name = "Kate Scott"
                        });
                });

            modelBuilder.Entity("day5.Models.EmployeeProject", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjects");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            ProjectId = 1,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 1,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 7,
                            ProjectId = 1,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            Role = "Manager"
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            Role = "Tester"
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 2,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 7,
                            ProjectId = 2,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            Role = "Manager"
                        },
                        new
                        {
                            EmployeeId = 6,
                            ProjectId = 3,
                            Role = "Tester"
                        },
                        new
                        {
                            EmployeeId = 7,
                            ProjectId = 4,
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 8,
                            ProjectId = 4,
                            Role = "Manager"
                        },
                        new
                        {
                            EmployeeId = 9,
                            ProjectId = 5,
                            Role = "Tester"
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 5,
                            Role = "Tester"
                        },
                        new
                        {
                            EmployeeId = 10,
                            ProjectId = 5,
                            Role = "Developer"
                        });
                });

            modelBuilder.Entity("day5.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ProjectName = "Alpha",
                            StartDate = new DateTime(2024, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 2,
                            ProjectName = "Beta",
                            StartDate = new DateTime(2024, 3, 2, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            ProjectName = "Gamma",
                            StartDate = new DateTime(2024, 3, 3, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 4,
                            ProjectName = "Delta",
                            StartDate = new DateTime(2024, 3, 4, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 5,
                            ProjectName = "Epsilon",
                            StartDate = new DateTime(2024, 3, 5, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 6,
                            ProjectName = "Zeta",
                            StartDate = new DateTime(2024, 3, 6, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 7,
                            ProjectName = "Eta",
                            StartDate = new DateTime(2024, 3, 7, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 8,
                            ProjectName = "Theta",
                            StartDate = new DateTime(2024, 3, 8, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 9,
                            ProjectName = "Iota",
                            StartDate = new DateTime(2024, 3, 9, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 10,
                            ProjectName = "Kappa",
                            StartDate = new DateTime(2024, 3, 10, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("day5.Models.Employee", b =>
                {
                    b.HasOne("day5.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("day5.Models.EmployeeProject", b =>
                {
                    b.HasOne("day5.Models.Employee", "Employee")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("day5.Models.Project", "Project")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("day5.Models.Department", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("day5.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProject");
                });

            modelBuilder.Entity("day5.Models.Project", b =>
                {
                    b.Navigation("EmployeeProject");
                });
#pragma warning restore 612, 618
        }
    }
}
